//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClaseDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDAssistsADSOEntities : DbContext
    {
        public BDAssistsADSOEntities()
            : base("name=BDAssistsADSOEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Asistencia> Asistencia { get; set; }
        public virtual DbSet<Competencia> Competencia { get; set; }
        public virtual DbSet<Ficha> Ficha { get; set; }
        public virtual DbSet<Programa_formacion> Programa_formacion { get; set; }
        public virtual DbSet<Reporte> Reporte { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<RegistroAsistencia> RegistroAsistencia { get; set; }
        public virtual DbSet<Soporte> Soporte { get; set; }
    
        public virtual ObjectResult<string> ValidarUsuarios(string correo, string contraseña)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ValidarUsuarios", correoParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<string> ValidarUsuarios1(string correo, string contraseña)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ValidarUsuarios1", correoParameter, contraseñaParameter);
        }
    
        public virtual int RegistrarUsuario(string tipo_Documento_usuario, Nullable<int> documento_usuario, string nombre_usuario, string apellido_usuario, Nullable<int> telefono_usuario, string correo_usuario, string contrasena_usuario, string tipo_usuario, string tipo_instructor, ObjectParameter registrado, ObjectParameter mensaje)
        {
            var tipo_Documento_usuarioParameter = tipo_Documento_usuario != null ?
                new ObjectParameter("Tipo_Documento_usuario", tipo_Documento_usuario) :
                new ObjectParameter("Tipo_Documento_usuario", typeof(string));
    
            var documento_usuarioParameter = documento_usuario.HasValue ?
                new ObjectParameter("Documento_usuario", documento_usuario) :
                new ObjectParameter("Documento_usuario", typeof(int));
    
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("Nombre_usuario", nombre_usuario) :
                new ObjectParameter("Nombre_usuario", typeof(string));
    
            var apellido_usuarioParameter = apellido_usuario != null ?
                new ObjectParameter("Apellido_usuario", apellido_usuario) :
                new ObjectParameter("Apellido_usuario", typeof(string));
    
            var telefono_usuarioParameter = telefono_usuario.HasValue ?
                new ObjectParameter("Telefono_usuario", telefono_usuario) :
                new ObjectParameter("Telefono_usuario", typeof(int));
    
            var correo_usuarioParameter = correo_usuario != null ?
                new ObjectParameter("Correo_usuario", correo_usuario) :
                new ObjectParameter("Correo_usuario", typeof(string));
    
            var contrasena_usuarioParameter = contrasena_usuario != null ?
                new ObjectParameter("Contrasena_usuario", contrasena_usuario) :
                new ObjectParameter("Contrasena_usuario", typeof(string));
    
            var tipo_usuarioParameter = tipo_usuario != null ?
                new ObjectParameter("Tipo_usuario", tipo_usuario) :
                new ObjectParameter("Tipo_usuario", typeof(string));
    
            var tipo_instructorParameter = tipo_instructor != null ?
                new ObjectParameter("Tipo_instructor", tipo_instructor) :
                new ObjectParameter("Tipo_instructor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario", tipo_Documento_usuarioParameter, documento_usuarioParameter, nombre_usuarioParameter, apellido_usuarioParameter, telefono_usuarioParameter, correo_usuarioParameter, contrasena_usuarioParameter, tipo_usuarioParameter, tipo_instructorParameter, registrado, mensaje);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int RegistrarUsuario1(string tipo_Documento_usuario, Nullable<int> documento_usuario, string nombre_usuario, string apellido_usuario, Nullable<int> telefono_usuario, string correo_usuario, string contrasena_usuario, string tipo_usuario, string tipo_instructor, ObjectParameter registrado, ObjectParameter mensaje)
        {
            var tipo_Documento_usuarioParameter = tipo_Documento_usuario != null ?
                new ObjectParameter("Tipo_Documento_usuario", tipo_Documento_usuario) :
                new ObjectParameter("Tipo_Documento_usuario", typeof(string));
    
            var documento_usuarioParameter = documento_usuario.HasValue ?
                new ObjectParameter("Documento_usuario", documento_usuario) :
                new ObjectParameter("Documento_usuario", typeof(int));
    
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("Nombre_usuario", nombre_usuario) :
                new ObjectParameter("Nombre_usuario", typeof(string));
    
            var apellido_usuarioParameter = apellido_usuario != null ?
                new ObjectParameter("Apellido_usuario", apellido_usuario) :
                new ObjectParameter("Apellido_usuario", typeof(string));
    
            var telefono_usuarioParameter = telefono_usuario.HasValue ?
                new ObjectParameter("Telefono_usuario", telefono_usuario) :
                new ObjectParameter("Telefono_usuario", typeof(int));
    
            var correo_usuarioParameter = correo_usuario != null ?
                new ObjectParameter("Correo_usuario", correo_usuario) :
                new ObjectParameter("Correo_usuario", typeof(string));
    
            var contrasena_usuarioParameter = contrasena_usuario != null ?
                new ObjectParameter("Contrasena_usuario", contrasena_usuario) :
                new ObjectParameter("Contrasena_usuario", typeof(string));
    
            var tipo_usuarioParameter = tipo_usuario != null ?
                new ObjectParameter("Tipo_usuario", tipo_usuario) :
                new ObjectParameter("Tipo_usuario", typeof(string));
    
            var tipo_instructorParameter = tipo_instructor != null ?
                new ObjectParameter("Tipo_instructor", tipo_instructor) :
                new ObjectParameter("Tipo_instructor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario1", tipo_Documento_usuarioParameter, documento_usuarioParameter, nombre_usuarioParameter, apellido_usuarioParameter, telefono_usuarioParameter, correo_usuarioParameter, contrasena_usuarioParameter, tipo_usuarioParameter, tipo_instructorParameter, registrado, mensaje);
        }
    
        public virtual ObjectResult<string> ValidarUsuarios2(string correo_usuario, string contrasena_usuario)
        {
            var correo_usuarioParameter = correo_usuario != null ?
                new ObjectParameter("Correo_usuario", correo_usuario) :
                new ObjectParameter("Correo_usuario", typeof(string));
    
            var contrasena_usuarioParameter = contrasena_usuario != null ?
                new ObjectParameter("Contrasena_usuario", contrasena_usuario) :
                new ObjectParameter("Contrasena_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ValidarUsuarios2", correo_usuarioParameter, contrasena_usuarioParameter);
        }
    
        public virtual int RegistrarUsuario2(string tipo_Documento_usuario, Nullable<int> documento_usuario, string nombre_usuario, string apellido_usuario, Nullable<int> telefono_usuario, string correo_usuario, string contrasena_usuario, string tipo_usuario, string tipo_instructor, ObjectParameter registrado, ObjectParameter mensaje)
        {
            var tipo_Documento_usuarioParameter = tipo_Documento_usuario != null ?
                new ObjectParameter("Tipo_Documento_usuario", tipo_Documento_usuario) :
                new ObjectParameter("Tipo_Documento_usuario", typeof(string));
    
            var documento_usuarioParameter = documento_usuario.HasValue ?
                new ObjectParameter("Documento_usuario", documento_usuario) :
                new ObjectParameter("Documento_usuario", typeof(int));
    
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("Nombre_usuario", nombre_usuario) :
                new ObjectParameter("Nombre_usuario", typeof(string));
    
            var apellido_usuarioParameter = apellido_usuario != null ?
                new ObjectParameter("Apellido_usuario", apellido_usuario) :
                new ObjectParameter("Apellido_usuario", typeof(string));
    
            var telefono_usuarioParameter = telefono_usuario.HasValue ?
                new ObjectParameter("Telefono_usuario", telefono_usuario) :
                new ObjectParameter("Telefono_usuario", typeof(int));
    
            var correo_usuarioParameter = correo_usuario != null ?
                new ObjectParameter("Correo_usuario", correo_usuario) :
                new ObjectParameter("Correo_usuario", typeof(string));
    
            var contrasena_usuarioParameter = contrasena_usuario != null ?
                new ObjectParameter("Contrasena_usuario", contrasena_usuario) :
                new ObjectParameter("Contrasena_usuario", typeof(string));
    
            var tipo_usuarioParameter = tipo_usuario != null ?
                new ObjectParameter("Tipo_usuario", tipo_usuario) :
                new ObjectParameter("Tipo_usuario", typeof(string));
    
            var tipo_instructorParameter = tipo_instructor != null ?
                new ObjectParameter("Tipo_instructor", tipo_instructor) :
                new ObjectParameter("Tipo_instructor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario2", tipo_Documento_usuarioParameter, documento_usuarioParameter, nombre_usuarioParameter, apellido_usuarioParameter, telefono_usuarioParameter, correo_usuarioParameter, contrasena_usuarioParameter, tipo_usuarioParameter, tipo_instructorParameter, registrado, mensaje);
        }
    
        public virtual int sp_alterdiagram1(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram1(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition1_Result> sp_helpdiagramdefinition1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition1_Result>("sp_helpdiagramdefinition1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams1_Result> sp_helpdiagrams1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams1_Result>("sp_helpdiagrams1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram1(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram1", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams1");
        }
    
        public virtual ObjectResult<string> ValidarUsuarios3(string correo_usuario, string contrasena_usuario)
        {
            var correo_usuarioParameter = correo_usuario != null ?
                new ObjectParameter("Correo_usuario", correo_usuario) :
                new ObjectParameter("Correo_usuario", typeof(string));
    
            var contrasena_usuarioParameter = contrasena_usuario != null ?
                new ObjectParameter("Contrasena_usuario", contrasena_usuario) :
                new ObjectParameter("Contrasena_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ValidarUsuarios3", correo_usuarioParameter, contrasena_usuarioParameter);
        }
    
        public virtual int RegistrarUsuario3(string tipo_Documento_usuario, Nullable<int> documento_usuario, string nombre_usuario, string apellido_usuario, Nullable<int> telefono_usuario, string correo_usuario, string contrasena_usuario, string tipo_usuario, string tipo_instructor, ObjectParameter registrado, ObjectParameter mensaje)
        {
            var tipo_Documento_usuarioParameter = tipo_Documento_usuario != null ?
                new ObjectParameter("Tipo_Documento_usuario", tipo_Documento_usuario) :
                new ObjectParameter("Tipo_Documento_usuario", typeof(string));
    
            var documento_usuarioParameter = documento_usuario.HasValue ?
                new ObjectParameter("Documento_usuario", documento_usuario) :
                new ObjectParameter("Documento_usuario", typeof(int));
    
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("Nombre_usuario", nombre_usuario) :
                new ObjectParameter("Nombre_usuario", typeof(string));
    
            var apellido_usuarioParameter = apellido_usuario != null ?
                new ObjectParameter("Apellido_usuario", apellido_usuario) :
                new ObjectParameter("Apellido_usuario", typeof(string));
    
            var telefono_usuarioParameter = telefono_usuario.HasValue ?
                new ObjectParameter("Telefono_usuario", telefono_usuario) :
                new ObjectParameter("Telefono_usuario", typeof(int));
    
            var correo_usuarioParameter = correo_usuario != null ?
                new ObjectParameter("Correo_usuario", correo_usuario) :
                new ObjectParameter("Correo_usuario", typeof(string));
    
            var contrasena_usuarioParameter = contrasena_usuario != null ?
                new ObjectParameter("Contrasena_usuario", contrasena_usuario) :
                new ObjectParameter("Contrasena_usuario", typeof(string));
    
            var tipo_usuarioParameter = tipo_usuario != null ?
                new ObjectParameter("Tipo_usuario", tipo_usuario) :
                new ObjectParameter("Tipo_usuario", typeof(string));
    
            var tipo_instructorParameter = tipo_instructor != null ?
                new ObjectParameter("Tipo_instructor", tipo_instructor) :
                new ObjectParameter("Tipo_instructor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario3", tipo_Documento_usuarioParameter, documento_usuarioParameter, nombre_usuarioParameter, apellido_usuarioParameter, telefono_usuarioParameter, correo_usuarioParameter, contrasena_usuarioParameter, tipo_usuarioParameter, tipo_instructorParameter, registrado, mensaje);
        }
    
        public virtual int sp_alterdiagram2(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram2", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram2(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram2", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram2(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram2", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition2_Result> sp_helpdiagramdefinition2(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition2_Result>("sp_helpdiagramdefinition2", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams2_Result> sp_helpdiagrams2(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams2_Result>("sp_helpdiagrams2", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram2(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram2", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams2");
        }
    
        public virtual ObjectResult<string> ValidarUsuarios4(string correo_usuario, string contrasena_usuario)
        {
            var correo_usuarioParameter = correo_usuario != null ?
                new ObjectParameter("Correo_usuario", correo_usuario) :
                new ObjectParameter("Correo_usuario", typeof(string));
    
            var contrasena_usuarioParameter = contrasena_usuario != null ?
                new ObjectParameter("Contrasena_usuario", contrasena_usuario) :
                new ObjectParameter("Contrasena_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ValidarUsuarios4", correo_usuarioParameter, contrasena_usuarioParameter);
        }
    
        public virtual int RegistrarUsuario4(string tipo_Documento_usuario, Nullable<int> documento_usuario, string nombre_usuario, string apellido_usuario, Nullable<int> telefono_usuario, string correo_usuario, string contrasena_usuario, string tipo_usuario, string tipo_instructor, ObjectParameter registrado, ObjectParameter mensaje)
        {
            var tipo_Documento_usuarioParameter = tipo_Documento_usuario != null ?
                new ObjectParameter("Tipo_Documento_usuario", tipo_Documento_usuario) :
                new ObjectParameter("Tipo_Documento_usuario", typeof(string));
    
            var documento_usuarioParameter = documento_usuario.HasValue ?
                new ObjectParameter("Documento_usuario", documento_usuario) :
                new ObjectParameter("Documento_usuario", typeof(int));
    
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("Nombre_usuario", nombre_usuario) :
                new ObjectParameter("Nombre_usuario", typeof(string));
    
            var apellido_usuarioParameter = apellido_usuario != null ?
                new ObjectParameter("Apellido_usuario", apellido_usuario) :
                new ObjectParameter("Apellido_usuario", typeof(string));
    
            var telefono_usuarioParameter = telefono_usuario.HasValue ?
                new ObjectParameter("Telefono_usuario", telefono_usuario) :
                new ObjectParameter("Telefono_usuario", typeof(int));
    
            var correo_usuarioParameter = correo_usuario != null ?
                new ObjectParameter("Correo_usuario", correo_usuario) :
                new ObjectParameter("Correo_usuario", typeof(string));
    
            var contrasena_usuarioParameter = contrasena_usuario != null ?
                new ObjectParameter("Contrasena_usuario", contrasena_usuario) :
                new ObjectParameter("Contrasena_usuario", typeof(string));
    
            var tipo_usuarioParameter = tipo_usuario != null ?
                new ObjectParameter("Tipo_usuario", tipo_usuario) :
                new ObjectParameter("Tipo_usuario", typeof(string));
    
            var tipo_instructorParameter = tipo_instructor != null ?
                new ObjectParameter("Tipo_instructor", tipo_instructor) :
                new ObjectParameter("Tipo_instructor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario4", tipo_Documento_usuarioParameter, documento_usuarioParameter, nombre_usuarioParameter, apellido_usuarioParameter, telefono_usuarioParameter, correo_usuarioParameter, contrasena_usuarioParameter, tipo_usuarioParameter, tipo_instructorParameter, registrado, mensaje);
        }
    
        public virtual int sp_alterdiagram3(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram3", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram3(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram3", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram3(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram3", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition3_Result> sp_helpdiagramdefinition3(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition3_Result>("sp_helpdiagramdefinition3", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams3_Result> sp_helpdiagrams3(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams3_Result>("sp_helpdiagrams3", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram3(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram3", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams3");
        }
    
        public virtual ObjectResult<string> ValidarUsuarios5(string correo_usuario, string contrasena_usuario)
        {
            var correo_usuarioParameter = correo_usuario != null ?
                new ObjectParameter("Correo_usuario", correo_usuario) :
                new ObjectParameter("Correo_usuario", typeof(string));
    
            var contrasena_usuarioParameter = contrasena_usuario != null ?
                new ObjectParameter("Contrasena_usuario", contrasena_usuario) :
                new ObjectParameter("Contrasena_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ValidarUsuarios5", correo_usuarioParameter, contrasena_usuarioParameter);
        }
    }
}
