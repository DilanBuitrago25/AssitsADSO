@model ClaseDatos.Usuario

@{
    ViewBag.Title = "Create";
}


<br />
<div class="container-fluid">
    <div class="page-header">
        <div class="row">
            <div class="col-sm-6">
                <h3>Gestionar Aprendiz</h3>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Instructor")">Home</a></li>
                    <li class="breadcrumb-item">Aprendiz</li>
                    <li class="breadcrumb-item">General</li>
                    <li class="breadcrumb-item active">Registrar</li>
                </ol>
            </div>
            <div class="col-sm-6">
              
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header pb-0">
                        <h5>Registrar Aprendiz</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col">

                                @Html.AntiForgeryToken()
                                <form>
                                    <div class="mb-3 input-group-solid">
                                        <label class="form-label">Documento</label>
                                        <div class="input-group">
                                            @Html.EditorFor(model => model.Documento_usuario, new { htmlAttributes = new { @class = "form-control" } })

                                        </div>
                                        @Html.ValidationMessageFor(model => model.Documento_usuario, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="mb-3 m-form__group">
                                        <label class="form-label">Tipo Documento</label>
                                        <div class="input-group">
                                            <span class="input-group-text">A</span>
                                            @Html.DropDownListFor(model => model.Tipo_Documento_usuario, new List<SelectListItem>
                                                {
                                                     new SelectListItem { Text = "Cedula de Ciudadania", Value = "C.C" },
                                                     new SelectListItem { Text = "Tarjeta de Identidad", Value = "T.I" },
                                                     new SelectListItem { Text = "Cedula de Extranjeria", Value = "C.E" }
                                                }, new { @class = "form-control" })

                                        </div>
                                        @Html.ValidationMessageFor(model => model.Tipo_Documento_usuario, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 input-group-solid">
                                        <label class="form-label">Nombre(s)</label>
                                        <div class="input-group">
                                            @Html.EditorFor(model => model.Nombre_usuario, new { htmlAttributes = new { @class = "form-control" } })

                                        </div>
                                        @Html.ValidationMessageFor(model => model.Nombre_usuario, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 m-form__group">
                                        <label class="form-label">Apellidos</label>
                                        <div class="input-group">
                                            @Html.EditorFor(model => model.Apellido_usuario, new { htmlAttributes = new { @class = "form-control" } })

                                        </div>
                                        @Html.ValidationMessageFor(model => model.Apellido_usuario, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 input-group-solid">
                                        <label class="form-label">Telefono</label>
                                        <div class="input-group">
                                            @Html.EditorFor(model => model.Telefono_usuario, new { htmlAttributes = new { @class = "form-control" } })

                                        </div>
                                        @Html.ValidationMessageFor(model => model.Telefono_usuario, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 m-form__group">
                                        <label class="form-label">Correo</label>
                                        <div class="input-group">
                                            @Html.EditorFor(model => model.Correo_usuario, new { htmlAttributes = new { @class = "form-control" } })

                                        </div>
                                        @Html.ValidationMessageFor(model => model.Correo_usuario, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="card-body d-flex justify-content-end">
                                        <form class="Form-RegisterByFiles">
                                            <!-- <div class="container-loading">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Cargando los archivos...</span>
            </div>
        </div> -->
                                            <h4>Registrar Instructores por Excel</h4>
                                            <label for="inputFile-Instructor">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                     viewBox="0 0 24 24">
                                                    <path fill="none" stroke="currentColor"
                                                          stroke-linecap="round" stroke-linejoin="round"
                                                          stroke-width="2"
                                                          d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4m14-7l-5-5l-5 5m5-5v12" />
                                                </svg>
                                                <input style="display: none;" type="file" name="inputFile-Instructor"
                                                       id="inputFile-Instructor"
                                                       accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel"
                                                       multiple>
                                            </label>
                                            <div style="display: none;" id="container-progress-bar_Instructor" class="container-progress-bar">
                                                <p id="text-progressBar-files_Instructor">Leyendo archivos...</p>
                                                <div class="progress" role="progressbar"
                                                     aria-label="Animated striped example" aria-valuenow="75"
                                                     aria-valuemin="0" aria-valuemax="100">
                                                    <div id="bar-progressBar-files_Instructor" class="progress-bar progress-bar-striped progress-bar-animated"></div>
                                                </div>
                                                <label id="porcentage-progressBar-files_Instructor">0%</label>
                                            </div>
                                            <p id="message-progressBar-files_Instructor">Seleciones los archivos en formato ".xlxs"</p>
                                            <button type="button" style="display: none;" id="buttom-progressBar-files_Instructor">Registrar</button>
                                        </form>
                                    </div>

                                    @Html.HiddenFor(model => model.Contrasena_usuario, new { Value = "Aprendiz123" })

                                    @Html.HiddenFor(model => model.Tipo_usuario, new { Value = "Aprendiz" })

                                   

                                    @Html.HiddenFor(model => model.Estado_Usuario, new { Value = "True" })
                                </form>
                            </div>
                        </div>
                    </div>


                    <div class="card-footer">
                        <button class="btn btn-primary m-r-15" type="submit">Crear</button>
                        <button class="btn btn-light" type="button"><a href="@Url.Action("Index","UsuariosAprendiz")">Cancelar</a></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script>
    // Elimina el atributo 'readonly' al cargar la página
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('@Html.IdFor(model => model.Nombre_usuario)').removeAttribute('readonly');
    });
    document.addEventListener('DOMContentLoaded', function () {
        var inputs = document.querySelectorAll('.form-control');
        inputs.forEach(function (input) {
            input.removeAttribute('readonly');
        });
    });
</script>

@*<h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Usuario</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Documento_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Documento_usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Documento_usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tipo_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tipo_usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tipo_usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tipo_Documento_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tipo_Documento_usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tipo_Documento_usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nombre_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre_usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre_usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Apellido_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Apellido_usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Apellido_usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefono_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telefono_usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefono_usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Correo_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Correo_usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Correo_usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tipo_instructor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tipo_instructor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tipo_instructor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Id_ficha, "Id_ficha", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Id_ficha", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Id_ficha, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Esinstructormaster_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Esinstructormaster_usuario)
                        @Html.ValidationMessageFor(model => model.Esinstructormaster_usuario, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contrasena_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contrasena_usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contrasena_usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
